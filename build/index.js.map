{"version":3,"sources":["../webpack:/regex-sampleset/src/dictionary.ts","../webpack:/regex-sampleset/src/tokenize.ts","../webpack:/regex-sampleset/webpack/bootstrap","../webpack:/regex-sampleset/webpack/runtime/define property getters","../webpack:/regex-sampleset/webpack/runtime/hasOwnProperty shorthand","../webpack:/regex-sampleset/webpack/runtime/make namespace object","../webpack:/regex-sampleset/src/index.ts"],"names":["az","all","i","push","String","fromCharCode","rawDict","d","D","filter","c","this","includes","w","toUpperCase","W","s","S","samplesDict","key","tokenize","regex","backslash","currentBracket","str","toString","slice","multipliers","samples","array","char","flat","_dictionary__WEBPACK_IMPORTED_MODULE_0__","R","length","eval","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","threw","__webpack_modules__","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","floor","ceil","round","random","Math","regexSamples","count","_tokenize__WEBPACK_IMPORTED_MODULE_0__","Z","sample","multiplier","j"],"mappings":"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","file":"index.js","sourcesContent":["const az = 'abcdefghijklmnopqrstuvwxyz', all = [];\r\nfor (let i = 32; i <= 126; i++)\r\n    all.push(String.fromCharCode(i));\r\nconst rawDict = {\r\n    '.': all,\r\n    d: '0123456789',\r\n    get D() { return all.filter(c => !this.d.includes(c)); },\r\n    get w() { return az + az.toUpperCase() + this.d + '_'; },\r\n    get W() { return all.filter(c => !this.w.includes(c)); },\r\n    s: ' \\t\\r\\n\\v\\f',\r\n    get S() { return all.filter(c => !this.s.includes(c)); },\r\n};\r\nexport const samplesDict = {};\r\nfor (const key in rawDict)\r\n    samplesDict[key] = [...rawDict[key]];\r\n","import { samplesDict } from './dictionary';\r\nexport default function tokenize(regex) {\r\n    let backslash = false, currentBracket = null;\r\n    const str = regex.toString().slice(1, -1), multipliers = {}, samples = [], array = () => currentBracket || samples, push = (s) => array().push(s);\r\n    for (const char of str) {\r\n        switch (char) {\r\n            case '\\\\':\r\n                backslash = true;\r\n                continue;\r\n            case '[':\r\n                currentBracket = [];\r\n                continue;\r\n            case ']':\r\n                samples.push(currentBracket.flat());\r\n                currentBracket = null;\r\n                continue;\r\n            case '.':\r\n                push(samplesDict['.']);\r\n                continue;\r\n            case '?':\r\n                multipliers[array().length - 1] = '?';\r\n                continue;\r\n            case '+':\r\n                multipliers[array().length - 1] = '+';\r\n                continue;\r\n        }\r\n        if (backslash) {\r\n            if (char in samplesDict)\r\n                push(samplesDict[char]);\r\n            else\r\n                push(eval(`\"\\\\${char}\"`));\r\n        }\r\n        else\r\n            push([char]);\r\n        backslash = false;\r\n    }\r\n    return [samples, multipliers];\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tokenize from './tokenize';\r\nconst { floor, ceil, round, random } = Math;\r\nexport function* regexSamples(regex, count = 10) {\r\n    const [samples, multipliers] = tokenize(regex);\r\n    while (count--) {\r\n        let str = '';\r\n        for (let i = 0; i < samples.length; i++) {\r\n            const sample = samples[i], multiplier = multipliers[i];\r\n            let count = 1;\r\n            if (multiplier === '?')\r\n                count = round(random());\r\n            if (multiplier === '+')\r\n                count = ceil(random() * 10);\r\n            for (let j = 0; j < count; j++)\r\n                str += sample[floor(random() * sample.length)];\r\n        }\r\n        yield str;\r\n    }\r\n}\r\n"]}